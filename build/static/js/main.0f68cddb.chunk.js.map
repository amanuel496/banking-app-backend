{"version":3,"sources":["constants/actionTypes.js","actions/authActions.js","components/user.png","components/login.js","components/signup.js","components/menu.js","reducers/authReducer.js","reducers/customerReducer.js","stores/store.js","ProtectedRoute.js","actions/customerActions.js","components/createAccount.js","components/view-all-accounts.js","App.js","reportWebVitals.js","index.js"],"names":["Constants","USER_LOGGEDIN","USER_LOGOUT","FETCH_CUSTOMERS","FETCH_CUSTOMER","SET_CUSTOMER","NEW_POST","submitLogin","data","runtimeEnv","dispatch","fetch","method","headers","Accept","body","JSON","stringify","mode","then","response","ok","Error","statusText","json","res","username","localStorage","setItem","name","token","userId","type","actionTypes","catch","e","console","log","logoutUser","removeItem","Login","props","updateDetails","bind","state","details","email","password","preventDefault","update","Object","assign","this","target","id","value","setState","className","src","userImg","alt","for","onChange","readonly","placeholder","to","style","marginLeft","onClick","login","class","Component","connect","Signup","signup","Menu","logout","marginBottom","textTransform","initialState","loggedIn","getItem","authReducer","action","updated","constants","customers","selectedCustomer","customerReducer","middlewares","thunk","store","createStore","combineReducers","auth","applyMiddleware","ProtectedRoute","component","pathname","React","setCustomer","customer","customerSet","fetchCustomers","Authorization","CreatAccount","submit","refreshPage","firstName","undefined","lastName","gender","accountType","accountNumber","parseInt","Math","random","amount","window","location","reload","event","postData","post","selected","readOnly","ViewAccounts","handleSelect","displayContent","selectedIndex","CustomersList","map","display","_id","App","path","exact","render","CreateAccount","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0f68cddb.chunk.js","sourcesContent":["const Constants = {\n  USER_LOGGEDIN: \"USER_LOGGEDIN\",\n  USER_LOGOUT: \"USER_LOGOUT\",\n  FETCH_CUSTOMERS: \"FETCH_CUSTOMERS\",\n  FETCH_CUSTOMER: \"FETCH_CUSTOMER\",\n  SET_CUSTOMER: \"SET_CUSTOMER\",\n  NEW_POST: \"NEW_POST\"\n};\n\nexport default Constants;","import actionTypes from '../constants/actionTypes';\nimport runtimeEnv from '@mars/heroku-js-runtime-env'\n\nfunction userLoggedIn(username) {\n    return {\n        type: actionTypes.USER_LOGGEDIN,\n        username: username\n    }\n}\n\nfunction logout() {\n    return {\n        type: actionTypes.USER_LOGOUT\n    }\n}\n\nexport function submitLogin(data) {\n    const env = runtimeEnv();\n    return dispatch => {\n        return fetch(\n          `https://my-banking-app-project.herokuapp.com/employee/signin`,\n          {\n            method: \"POST\",\n            headers: {\n              Accept: \"application/json\",\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(data),\n            mode: \"cors\",\n          }\n        )\n          .then((response) => {\n            if (!response.ok) {\n              throw Error(response.statusText);\n            }\n            return response.json();\n          })\n          .then((res) => {\n            localStorage.setItem(\"name\", res.name);\n            localStorage.setItem(\"token\", res.token);\n\n            dispatch(userLoggedIn(data.userId));\n          })\n          .catch((e) => {\n            console.log(e);\n            // window.alert(e+\"hi hi\")\n          });\n    }\n}\n\nexport function submitSignup(data) {\n    const env = runtimeEnv();\n    return dispatch => {\n        return fetch(\n          `https://my-banking-app-project.herokuapp.com/employee/signup`,\n          {\n            method: \"POST\",\n            headers: {\n              Accept: \"application/json\",\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(data),\n            mode: \"cors\",\n          }\n        )\n          .then((response) => {\n            if (!response.ok) {\n              throw Error(response.statusText);\n            }\n            return response.json();\n          })\n          .then((res) => {\n            dispatch(submitLogin(data));\n          })\n          .catch((e) => console.log(e));\n    }\n}\n\nexport function logoutUser() {\n    return dispatch => {\n        localStorage.removeItem('name');\n        localStorage.removeItem('token');\n        dispatch(logout())\n    }\n}","export default __webpack_public_path__ + \"static/media/user.a6143582.png\";","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { submitLogin } from \"../actions/authActions\";\r\nimport userImg from \"./user.png\";\r\n import { LinkContainer } from \"react-router-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.updateDetails = this.updateDetails.bind(this);\r\n    // this.login = this.login.bind(this);\r\n\r\n    this.state = {\r\n      details: {\r\n        email: \"\",\r\n        password: \"\",\r\n      },\r\n    };\r\n  }\r\n\r\n  updateDetails(e) {\r\n    e.preventDefault();\r\n    let update = Object.assign({}, this.state.details);\r\n\r\n    update[e.target.id] = e.target.value;\r\n    this.setState({\r\n      details: update,\r\n    });\r\n  }\r\n\r\n  // login() {\r\n  //   const { dispatch } = this.props;\r\n  //   // window.alert('being logedin')\r\n  //   dispatch(submitLogin(this.state.details));\r\n  // }\r\n  login() {\r\n    this.props.dispatch(submitLogin(this.state.details));\r\n  }\r\n  handleSignup() {}\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid\" id=\"login-wrapper\">\r\n        <div className=\"row\">\r\n          <h1>My-Bank</h1>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"user-login\">\r\n            <img className=\"user-img\" src={userImg} alt=\"user avator\" />\r\n            <form>\r\n              <div className=\"form-group\">\r\n                <label for=\"email\" className=\"col-sm-2 col-form-label\">\r\n                  Email\r\n                </label>\r\n                <div className=\"col-sm-10\">\r\n                  <input\r\n                    onChange={this.updateDetails}\r\n                    type=\"text\"\r\n                    readonly\r\n                    className=\"form-control\"\r\n                    id=\"email\"\r\n                    placeholder=\"email@example.com\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label for=\"password\" className=\"col-sm-2 col-form-label\">\r\n                  Password\r\n                </label>\r\n                <div className=\"col-sm-10\">\r\n                  <input\r\n                    onChange={this.updateDetails}\r\n                    type=\"password\"\r\n                    className=\"form-control\"\r\n                    id=\"password\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              {/* <LinkContainer to=\"/menu\">\r\n                <button\r\n                  style={{ marginLeft: \"15px\" }}\r\n                  onClick={this.login}\r\n                  type=\"button\"\r\n                  class=\"btn btn-primary\"\r\n                >\r\n                  Login\r\n                </button>\r\n              </LinkContainer> */}\r\n                <Link to=\"/menu\">\r\n                  <button\r\n                    style={{ marginLeft: \"15px\" }}\r\n                    onClick={this.login.bind(this)}\r\n                    type=\"button\"\r\n                    class=\"btn btn-primary\"\r\n                  >\r\n                    Login\r\n                  </button>\r\n                </Link>\r\n\r\n              <Link to=\"/signup\">\r\n                <button\r\n                  style={{ marginLeft: \"15px\" }}\r\n                  // onClick={() => (\r\n                  //   <Route exact path=\"/\" render={() => <Signup />} />\r\n                  // )}\r\n                  type=\"button\"\r\n                  class=\"btn btn-primary\"\r\n                >\r\n                  Create Account\r\n                </button>\r\n              </Link>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {};\r\n};\r\n\r\nexport default connect(mapStateToProps)(Login);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { submitSignup } from \"../actions/authActions\";\r\nimport userImg from \"./user.png\";\r\n import { LinkContainer } from \"react-router-bootstrap\";\r\n\r\nclass Signup extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.updateDetails = this.updateDetails.bind(this);\r\n    this.signup = this.signup.bind(this);\r\n\r\n    this.state = {\r\n      details: {\r\n        name: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n      },\r\n    };\r\n  }\r\n\r\n  updateDetails(e) {\r\n    let update = Object.assign({}, this.state.details);\r\n\r\n    update[e.target.id] = e.target.value;\r\n    this.setState({\r\n      details: update,\r\n    });\r\n  }\r\n\r\n  signup() {\r\n    const { dispatch } = this.props;\r\n    dispatch(submitSignup(this.state.details));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid\" id=\"login-wrapper\">\r\n        <div className=\"row\">\r\n          <h1>My-Bank</h1>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"user-login\">\r\n            <img className=\"user-img\" src={userImg} alt=\"user avator\" />\r\n            <form>\r\n              <div className=\"form-group\">\r\n                <label for=\"name\" className=\"col-sm-4 col-form-label\">\r\n                  Full-Name\r\n                </label>\r\n                <div className=\"col-sm-10\">\r\n                  <input\r\n                    onChange={this.updateDetails}\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    id=\"name\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label for=\"email\" className=\"col-sm-2 col-form-label\">\r\n                  Email\r\n                </label>\r\n                <div className=\"col-sm-10\">\r\n                  <input\r\n                    onChange={this.updateDetails}\r\n                    type=\"text\"\r\n                    readonly\r\n                    className=\"form-control\"\r\n                    id=\"email\"\r\n                    placeholder=\"email@example.com\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label for=\"password\" className=\"col-sm-2 col-form-label\">\r\n                  Password\r\n                </label>\r\n                <div className=\"col-sm-10\">\r\n                  <input\r\n                    onChange={this.updateDetails}\r\n                    type=\"password\"\r\n                    className=\"form-control\"\r\n                    id=\"password\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              <LinkContainer to=\"/menu\">\r\n                <button\r\n                  style={{ marginLeft: \"15px\" }}\r\n                  onClick={this.signup}\r\n                  type=\"button\"\r\n                  class=\"btn btn-primary\"\r\n                >\r\n                  Signup\r\n                </button>\r\n              </LinkContainer>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {};\r\n};\r\n\r\nexport default connect(mapStateToProps)(Signup);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport userImg from \"./user.png\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { logoutUser } from \"../actions/authActions\";\r\n\r\nclass Menu extends Component {\r\n  logout() {\r\n    this.props.dispatch(logoutUser());\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid\" id=\"menu-wrapper\">\r\n        <div className=\"row\">\r\n          <button className=\"logout btn btn-primary\"></button>\r\n          {/* <LinkContainer to=\"/signin\">\r\n            <button\r\n              // style={{ marginLeft: \"15px\" }}\r\n              onClick={() => <Route exact path=\"/\" render={() => <Signup />} />}\r\n              type=\"button\"\r\n              class=\"logout btn btn-primary\"\r\n            >\r\n              Logout\r\n            </button>\r\n          </LinkContainer> */}\r\n          <Link to=\"/signin\">\r\n            <button\r\n              // style={{ marginLeft: \"15px\" }}\r\n              onClick={this.logout.bind(this)}\r\n              type=\"button\"\r\n              class=\"logout btn btn-primary\"\r\n            >\r\n              Logout\r\n            </button>\r\n          </Link>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"user-menu\">\r\n            <img className=\"user-img-menu\" src={userImg} alt=\"user avator\" />\r\n            <div\r\n              style={{\r\n                marginLeft: \"33%\",\r\n                marginBottom: \"8%\",\r\n                textTransform: \"uppercase\",\r\n              }}\r\n            >\r\n              {localStorage.name}\r\n            </div>\r\n            <div>\r\n              {\" \"}\r\n              <Link to=\"/createAccount\">\r\n                <button\r\n                  // style={{ marginLeft: \"15px\" }}\r\n                  // onClick={this.logout.bind(this)}\r\n                  type=\"button\"\r\n                  class=\"menu-btn\"\r\n                >\r\n                  creat customer account\r\n                </button>\r\n              </Link>\r\n            </div>\r\n            <div>\r\n              {\" \"}\r\n              <Link to=\"/viewaccounts\">\r\n                <button type=\"button\" class=\"menu-btn\">\r\n                  view existing accounts\r\n                </button>\r\n              </Link>\r\n            </div>\r\n            {/* <div>\r\n              {\" \"}\r\n              <button type=\"submit\" class=\"menu-btn\">\r\n                view all existing account\r\n              </button>\r\n            </div> */}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n// const mapStateToProps = (state) => {\r\n//   return {};\r\n// };\r\n\r\n// export default Menu;\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    // loggedIn: state.auth.loggedIn,\r\n    // username: state.auth.username,\r\n    // selectedMovie: state.movie.selectedMovie,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Menu);","import constants from '../constants/actionTypes'\n\nlet initialState = {\n    loggedIn: localStorage.getItem('token') ? true : false,\n    username: localStorage.getItem('username') ? localStorage.getItem('username') : ''\n}\n\nconst authReducer = (state = initialState, action) => {\n\n    var updated = Object.assign({}, state);\n\n    switch (action.type) {\n        case constants.USER_LOGGEDIN:\n            updated['loggedIn'] = true;\n            updated['username'] = action.username;\n            // window.alert('user loggedin')\n            return updated;\n\n        case constants.USER_LOGOUT:\n            updated['loggedIn'] = false;\n            updated['username'] = '';\n            return updated;\n\n        default:\n            return state;\n    }\n}\n\nexport default authReducer","import constants from \"../constants/actionTypes\";\r\n\r\nlet initialState = {\r\n  customers: [],\r\n  selectedCustomer: null,\r\n};\r\n\r\n\r\nconst customerReducer = (state = initialState, action) => {\r\n  let updated = Object.assign({}, state);\r\n\r\n  switch (action.type) {\r\n    case constants.FETCH_CUSTOMERS:\r\n      // return {\r\n      //   ...state,\r\n      //   customers: action.customers\r\n      // };\r\n      \r\n      // break;\r\n      updated[\"customers\"] = action.customers;\r\n      updated[\"selectedCustomer\"] = action.customers[0];\r\n      console.log(updated.customers)\r\n      return updated;\r\n    case constants.SET_CUSTOMER:\r\n      updated[\"selectedCustomer\"] = action.selectedCustomer;\r\n      return updated;\r\n    case constants.FETCH_CUSTOMER:\r\n      updated[\"selectedCustomer\"] = action.selectedCustomer;\r\n      return updated;\r\n    case constants.NEW_POST:\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default customerReducer;\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport authReducer from \"../reducers/authReducer\";\nimport customerReducer from \"../reducers/customerReducer\";\n// import reviewReducer from '../reducers/reviewReducer';\nconst middlewares = [thunk];\n\n// if (process.env.NODE_ENV === 'development') {\n//     const { logger } = require('redux-logger');\n\n//     middlewares.push(logger);\n// }\n\nconst store = createStore(\n    combineReducers( {\n        auth: authReducer,\n        customers: customerReducer,\n    }),\n    applyMiddleware(\n        ...middlewares\n    )\n);\n\nexport default store;","import React from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\n// import {logoutUser} from \"../actions/authActions\";\r\nimport Login from './components/login';\r\nimport Menu from './components/menu';\r\n\r\nclass ProtectedRoute extends React.Component {\r\n\r\n    render() {\r\n        const Component = this.props.component;\r\n        const isAuthenticated = localStorage.getItem(\"token\");\r\n       \r\n        return isAuthenticated ? (\r\n            <Component />\r\n        ) : (\r\n            <Redirect to={{ pathname: '/login' }} />\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProtectedRoute;","import actionTypes from \"../constants/actionTypes\";\r\nimport runtimeEnv from \"@mars/heroku-js-runtime-env\";\r\n\r\nfunction customersFetched(customers) {\r\n  // customers = customers\r\n  console.log(customers);\r\n  return {\r\n    type: actionTypes.FETCH_CUSTOMERS,\r\n    customers: customers,\r\n  };\r\n}\r\n\r\nfunction customerFetched(customer) {\r\n  return {\r\n    type: actionTypes.FETCH_CUSTOMER,\r\n    selectedCustomer: customer,\r\n  };\r\n}\r\n\r\nfunction customerSet(customer) {\r\n  return {\r\n    type: actionTypes.SET_CUSTOMER,\r\n    selectedCustomer: customer,\r\n  };\r\n}\r\n\r\nexport function setCustomer(customer) {\r\n  return (dispatch) => {\r\n    dispatch(customerSet(customer));\r\n  };\r\n}\r\n\r\nexport function fetchCustomer(customerId) {\r\n  const env = runtimeEnv();\r\n  return (dispatch) => {\r\n    return fetch(\r\n      `{https://my-banking-app-project.herokuapp.com/customers/${customerId}`,\r\n      {\r\n        method: \"GET\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `JWT ${localStorage.getItem(\"token\")}`,\r\n        },\r\n        mode: \"cors\",\r\n      }\r\n    )\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw Error(response.statusText);\r\n        }\r\n        return response.json();\r\n      })\r\n      .then((res) => {\r\n        dispatch(customerFetched(res.body));\r\n      })\r\n      .catch((e) => console.log(e));\r\n  };\r\n}\r\n\r\nexport function fetchCustomers() {\r\n  const env = runtimeEnv();\r\n  return (dispatch) => {\r\n    return fetch(`https://my-banking-app-project.herokuapp.com/customers`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `JWT ${localStorage.getItem(\"token\")}`,\r\n      },\r\n      mode: \"cors\",\r\n    })\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw Error(response.statusText);\r\n        }\r\n        return response.json();\r\n      })\r\n      .then((res) => {\r\n        // console.log(localStorage.getItem(\"token\"));\r\n        // window.alert(res);\r\n        dispatch(customersFetched(res));\r\n      })\r\n      .catch((e) => console.log(e));\r\n  };\r\n}\r\n\r\nexport const createCustomer = (postData) => (dispatch) => {\r\n  const env = runtimeEnv();\r\n  const token = window.localStorage.getItem(\"token\");\r\n//   postData.customer = customerId;\r\n  console.log(postData);\r\n  //   window.alert(\"way to go\")\r\n  fetch(`https://my-banking-app-project.herokuapp.com/customers`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      //   Accept: \"application/json\",\r\n      \"content-type\": \"application/json\",\r\n      Authorization: `JWT ${localStorage.getItem(\"token\")}`,\r\n      //   Authorization: window.localStorage.getItem(\"token\"),\r\n    },\r\n    mode: \"cors\",\r\n    body: JSON.stringify(postData),\r\n  })\r\n    .then((response) => {\r\n      if (!response.ok) {\r\n        throw Error(response.statusText);\r\n      }\r\n      return response.json();\r\n    })\r\n    .then((post) =>\r\n      dispatch({\r\n        type: actionTypes.NEW_POST,\r\n        // payload: post,\r\n        // customerId,\r\n      })\r\n    );\r\n};","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n// import userImg from \"./user.png\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { logoutUser } from \"../actions/authActions\";\r\nimport { createCustomer } from \"../actions/customerActions\";\r\n\r\nclass CreatAccount extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.updateDetails = this.updateDetails.bind(this);\r\n    this.submit = this.submit.bind(this);\r\n    this.refreshPage = this.refreshPage.bind(this);\r\n    // this.handleSelect = this.handleSelect.bind(this);\r\n\r\n    this.state = {\r\n      details: {\r\n        firstName: undefined,\r\n        lastName: undefined,\r\n        email: undefined,\r\n        gender: undefined,\r\n        accountType: undefined,\r\n        accountNumber: parseInt(\r\n          Math.random() * (1000000000 - 1100000000) + 1100000000\r\n        ),\r\n        amount: undefined,\r\n      },\r\n    };\r\n  }\r\n  // shouldComponentUpdate(nextProps, nextState) {\r\n  //   if (this.props.accountNumber === nextProps.accountNumber) {\r\n  //     return true;\r\n  //   } else {\r\n  //     return false;\r\n  //   }\r\n  // }\r\n\r\n\r\n  refreshPage () {\r\n    window.location.reload(false);\r\n  }\r\n  updateDetails(event) {\r\n    // event.preventDefault();\r\n    let updateDetails = Object.assign({}, this.state.details);\r\n\r\n    updateDetails[event.target.name] = event.target.value;\r\n    this.setState({\r\n      details: updateDetails,\r\n    });\r\n  }\r\n\r\n  //   handleSelect(eventKey) {\r\n  //     let updateDetails = Object.assign({}, this.state.details);\r\n  //     updateDetails[\"rating\"] = parseInt(eventKey);\r\n  //     this.setState({\r\n  //       details: updateDetails,\r\n  //     });\r\n  //     console.log(this.state.details);\r\n  //   }\r\n\r\n  submit() {\r\n    //   window.alert(\"hey hey\");\r\n    const { dispatch } = this.props;\r\n    // window.alert(this.state.details.name);\r\n    dispatch(createCustomer(this.state.details));\r\n  }\r\n  logout() {\r\n    this.props.dispatch(logoutUser());\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid\" id=\"create-account-wrapper\">\r\n        <div className=\"row\">\r\n          <button className=\"logout btn btn-primary\"></button>\r\n          <Link to=\"/signin\">\r\n            <button\r\n              // style={{ marginLeft: \"15px\" }}\r\n              onClick={this.logout.bind(this)}\r\n              type=\"button\"\r\n              class=\"logout btn btn-primary\"\r\n            >\r\n              Logout\r\n            </button>\r\n          </Link>\r\n          <Link to=\"/menu\">\r\n            <button\r\n              // style={{ marginLeft: \"15px\" }}\r\n              //   onClick={this.logout.bind(this)}\r\n              type=\"button\"\r\n              class=\"back btn btn-primary\"\r\n            >\r\n              Back\r\n            </button>\r\n          </Link>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col\">\r\n            <h1 style={{ marginBottom: \"10%\" }}>\r\n              Bank Account Registration Form\r\n            </h1>\r\n            <form>\r\n              <div className=\"form-row\">\r\n                <div className=\"col form-group\">\r\n                  <label>First name </label>\r\n                  <input\r\n                    value={this.state.details.firstName}\r\n                    name=\"firstName\"\r\n                    onChange={this.updateDetails}\r\n                    type=\"text\"\r\n                    class=\"form-control\"\r\n                    placeholder=\"\"\r\n                  />\r\n                </div>\r\n                <div className=\"col form-group\">\r\n                  <label>Last name</label>\r\n                  <input\r\n                    value={this.state.details.lastName}\r\n                    name=\"lastName\"\r\n                    onChange={this.updateDetails}\r\n                    type=\"text\"\r\n                    class=\"form-control\"\r\n                    placeholder=\" \"\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label>Email address</label>\r\n                <input\r\n                  value={this.state.details.email}\r\n                  name=\"email\"\r\n                  onChange={this.updateDetails}\r\n                  type=\"email\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"\"\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label className=\"form-check form-check-inline\">\r\n                  <input\r\n                    onChange={this.updateDetails}\r\n                    className=\"form-check-input\"\r\n                    type=\"radio\"\r\n                    name=\"gender\"\r\n                    value=\"Male\"\r\n                  />\r\n                  <span className=\"form-check-label\"> Male </span>\r\n                </label>\r\n                <label className=\"form-check form-check-inline\">\r\n                  <input\r\n                    onChange={this.updateDetails}\r\n                    className=\"form-check-input\"\r\n                    type=\"radio\"\r\n                    name=\"gender\"\r\n                    value=\"Female\"\r\n                  />\r\n                  <span className=\"form-check-label\"> Female</span>\r\n                </label>\r\n              </div>\r\n              <div className=\"form-row\">\r\n                <div className=\"form-group col-md-6\">\r\n                  <label>Amount</label>\r\n                  <input\r\n                    name=\"amount\"\r\n                    value={this.state.details.amount}\r\n                    onChange={this.updateDetails}\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                  />\r\n                </div>\r\n                <div className=\"form-group col-md-6\">\r\n                  <label>\r\n                    Account Type\r\n                    <select\r\n                      value={this.state.details.accountType}\r\n                      onChange={this.updateDetails}\r\n                      name=\"accountType\"\r\n                      id=\"inputState\"\r\n                      className=\"form-control\"\r\n                    >\r\n                      <option value=\"\"> Choose...</option>\r\n                      <option value=\"Checking Account\" selected=\"\">\r\n                        Checking Account\r\n                      </option>\r\n                      <optionc value=\"Savings Account\">Savings Account</optionc>\r\n                      <option value=\"A Money Markey Account\">\r\n                        A Money Markey Account\r\n                      </option>\r\n                      <option value=\"Certificates of Deposit (CD)\">\r\n                        Certificates of Deposit (CD)\r\n                      </option>\r\n                      <option value=\"IRA Account\">IRA Account</option>\r\n                    </select>\r\n                  </label>\r\n                  {/* <input type=\"submit\" value=\"Submit\" /> */}\r\n                </div>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label>\r\n                  Account Number &nbsp;&nbsp;\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-primary\"\r\n                    onClick={this.refreshPage}\r\n                  >\r\n                    Regenerate\r\n                  </button>\r\n                </label>\r\n                <input\r\n                  id=\"accountNumber\"\r\n                  className=\"form-control\"\r\n                  // type=\"text\"\r\n                  value={this.state.details.accountNumber}\r\n                  readOnly\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <Link to=\"/menu\">\r\n                  <button\r\n                    //   className=\"submit-btn\"\r\n                    type=\"button\"\r\n                    onClick={this.submit}\r\n                    className=\"btn btn-primary btn-block\"\r\n                  >\r\n                    {\" \"}\r\n                    Register{\" \"}\r\n                  </button>\r\n                </Link>\r\n                {/* <Link to=\"/menu\">\r\n                  <button\r\n                    // style={{ marginLeft: \"15px\" }}\r\n                    //   onClick={this.logout.bind(this)}\r\n                    type=\"button\"\r\n                    class=\"back btn btn-primary\"\r\n                  >\r\n                    Back\r\n                  </button>\r\n                </Link> */}\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n// const mapStateToProps = (state) => {\r\n//   return {};\r\n// };\r\n\r\n// export default CreatAccount;\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    selectedCustomer: state.customers.selectedCustomer,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(CreatAccount);\r\n","import React, { Component } from \"react\";\r\nimport { fetchCustomers } from \"../actions/customerActions\"\r\nimport { setCustomer } from \"../actions/customerActions\";\r\nimport { connect } from \"react-redux\";\r\n// import userImg from \"./user.png\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { logoutUser } from \"../actions/authActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport userImg from \"./user.png\";\r\n\r\nclass ViewAccounts extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleSelect = this.handleSelect.bind(this);\r\n    // this.handleOnClick = this.handleOnClick.bind(this);\r\n\r\n    this.state = {\r\n      displayContent: false\r\n    }\r\n  }\r\n\r\n    componentDidMount() {\r\n        const {dispatch} = this.props;\r\n        dispatch(fetchCustomers());\r\n    }\r\n\r\n\r\n\r\n    handleSelect(selectedIndex, e) {\r\n        const {dispatch} = this.props;\r\n        dispatch(setCustomer(this.props.customers[selectedIndex]));\r\n    }\r\n\r\n    // handleClick = (movie) => {\r\n    //     const {dispatch} = this.props;\r\n    //     dispatch(setMovie(movie));\r\n    // }\r\n\r\n  \r\n  // shouldComponentUpdate(nextProps, nextState) {\r\n  //   if (this.props.accountNumber === nextProps.accountNumber) {\r\n  //     return true;\r\n  //   } else {\r\n  //     return false;\r\n  //   }\r\n  // }\r\n\r\n  refreshPage() {\r\n    window.location.reload(false);\r\n  }\r\n  updateDetails(event) {\r\n    // event.preventDefault();\r\n    let updateDetails = Object.assign({}, this.state.details);\r\n\r\n    updateDetails[event.target.name] = event.target.value;\r\n    this.setState({\r\n      details: updateDetails,\r\n    });\r\n  }\r\n\r\n  //   handleSelect(eventKey) {\r\n  //     let updateDetails = Object.assign({}, this.state.details);\r\n  //     updateDetails[\"rating\"] = parseInt(eventKey);\r\n  //     this.setState({\r\n  //       details: updateDetails,\r\n  //     });\r\n  //     console.log(this.state.details);\r\n  //   }\r\n\r\n//   submit() {\r\n//     //   window.alert(\"hey hey\");\r\n//     const { dispatch } = this.props;\r\n//     // window.alert(this.state.details.name);\r\n//     dispatch(createCustomer(this.state.details));\r\n//   }\r\n  logout() {\r\n    this.props.dispatch(logoutUser());\r\n  }\r\n\r\n//   handleOnClick(){\r\n// document.getElementById(\"customer-detail\").style.display = \"block\"\r\n// }\r\n  \r\n\r\n//     handleOnClick(){\r\n\r\n//     if(this.state.displayContent === false){\r\n//       // window.alert(\"hi\")\r\n//           var x = document.getElementById(\"customer-detail\");\r\n//           var i;\r\n// for (i = 0; i < x.length; i++) {\r\n//   let elem = x[i]\r\n//   elem.style.display = 'block !important'\r\n//   // x[i].style.display = 'block';\r\n//   // document.getElementsByClassName(\"customer-detail\")[i].style.display = 'inline important'\r\n//   // window.alert(i);\r\n// }}\r\n// else {\r\n//       var x = document.getElementById(\"customer-detail\");\r\n//       var i;\r\n// for (i = 0; i < x.length; i++) {\r\n//     let elem = document.getElementById(\"customer-detail\")[i];\r\n//     elem.style.display = \"none\";\r\n//   // x[i].style.display = \"none\";\r\n//   // document.getElementsByClassName(\"customer-detail\")[i].style.display =\r\n//   //   \"inline important\";\r\n// }\r\n//   }\r\n//   this.setState({ displayContent: !this.state.displayContent });\r\n// }\r\n  render() {\r\n      // if (this.props.customers){\r\n      //  const data = ;\r\n        // window.alert(this.props.customers);\r\n        // const data = Array.from(this.props.customers);\r\n//         if (this.props.customers){\r\n// const customers = this.props.customers.map((customer) => (\r\n//   <div key={customer._id}>\r\n//     <h3>{customer.firstName}</h3>\r\n//     <h3>{customer.lastName}</h3>\r\n//   </div>\r\n//   ));\r\n//       }\r\n     const CustomersList = ({customers}) => {\r\n            if (!customers) {\r\n                return <div>Loading....</div>\r\n            }\r\n      // console.log(this.props);\r\n        \r\n    return (\r\n      <div className=\"container-fluid\" id=\"view-account-wrapper\">\r\n        <div className=\"row\">\r\n          <button className=\"logout btn btn-primary\"></button>\r\n          <Link to=\"/signin\">\r\n            <button\r\n              // style={{ marginLeft: \"15px\" }}\r\n              onClick={this.logout.bind(this)}\r\n              type=\"button\"\r\n              class=\"logout btn btn-primary\"\r\n            >\r\n              Logout\r\n            </button>\r\n          </Link>\r\n          <Link to=\"/menu\">\r\n            <button\r\n              // style={{ marginLeft: \"15px\" }}\r\n              //   onClick={this.logout.bind(this)}\r\n              type=\"button\"\r\n              class=\"back btn btn-primary\"\r\n            >\r\n              Back\r\n            </button>\r\n          </Link>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-12\" style={{ marginLeft: \"40%\" }}>\r\n            <h1 style={{ marginBottom: \"10%\" }}>Customers List</h1>\r\n            {this.props.customers.customers.map((customer) => (\r\n              <div key={customer._id} id=\"customers-list\">\r\n                <h3 style={{ display: \"inline\" }}>\r\n                  {customer.firstName}&nbsp;{customer.lastName}\r\n                </h3>\r\n                {/* &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; */}\r\n                <h5\r\n                  // style={{\r\n                  //   display: \"inline\",\r\n                  //   alignItems: \"left\",\r\n                  //   float: \"right\",\r\n                  //   marginRight: \"3%\",\r\n                  // }}\r\n                >\r\n                  &nbsp;Account Number: {customer.accountNumber}\r\n                </h5>\r\n                <div\r\n                  className=\"customer-detail\"\r\n                  // id={JSON.stringify(customer._id)}\r\n                >\r\n                  <h5>&nbsp;Account Type:&nbsp;{customer.accountType}</h5>\r\n                  <h5>&nbsp;Amount:&nbsp;{customer.amount}</h5>\r\n                  <h5>&nbsp;Gender:&nbsp;{customer.gender}</h5>\r\n                  <h5>&nbsp;Email:&nbsp;{customer.email}</h5>\r\n                </div>\r\n                {/* <button\r\n                  type=\"button\"\r\n                  className=\"customer-view-detail\"\r\n                  style={{ width: \"100%\", height: \"100%\", margin: \"auto\" }}\r\n                  data-toggle=\"modal\"\r\n                  data-target=\"#exampleModalLong\"\r\n                  key={customer._id}\r\n                  id={customer._id}\r\n                  // onClick={this.handleOnClick}\r\n                >\r\n                  View Details\r\n                </button> */}\r\n              </div>\r\n            ))}\r\n            {/* <h1>{this.props.customers.customers[0]}</h1> */}\r\n            {/* {console.log(customers)} */}\r\n            {console.log(this.props.customers.customers[0])}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  return (<CustomersList customers={this.props.customers}/>)\r\n}}\r\n// const mapStateToProps = (state) => {\r\n//   return {};\r\n// };\r\n\r\n// export default CreatAccount;\r\n\r\n// ViewAccounts.propTypes = {\r\n//   fetchCustomers: PropTypes.func.isRequired,\r\n//   customers: PropTypes.array.isRequired,\r\n// //   newPost: PropTypes.object,\r\n// };\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    customers: state.customers\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ViewAccounts);\r\n","import './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {Provider} from 'react-redux';\n import { Route, BrowserRouter, Switch } from \"react-router-dom\";\nimport Login from './components/login'\nimport Signup from \"./components/signup\";\nimport Menu from \"./components/menu\";\nimport store from \"./stores/store\";\nimport ProtectedRoute from \"./ProtectedRoute\";\nimport CreateAccount from \"./components/createAccount\";\nimport ViewAccounts from \"./components/view-all-accounts\"\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Provider store={store}>\n        <BrowserRouter>\n          <Switch>\n            <Route path=\"/login\" component={Login} />\n            <Route exact path=\"/signup\" render={() => <Signup />} />\n            <ProtectedRoute exact=\"true\" path=\"/menu\" component={Menu} />\n            <ProtectedRoute\n              // exact=\"true\"\n              path=\"/creatAccount\"\n              component={CreateAccount}\n            />\n\n            <ProtectedRoute\n              // exact=\"true\"\n              path=\"/viewaccounts\"\n              component={ViewAccounts}\n            />\n            <ProtectedRoute component={CreateAccount} />\n            {/* <ProtectedRoute component={ViewAccounts} /> */}\n          </Switch>\n        </BrowserRouter>\n      </Provider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n// import * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n// serviceWorker.register();\n"],"sourceRoot":""}